module class

Option Explicit

Public WithEvents http As MSXML2.XMLHTTP60
Private targetAddress As String

Public Sub Start(prompt As String, targetCell As Range)
    targetAddress = targetCell.Address(False, False)
    
    Set http = New MSXML2.XMLHTTP60
    Dim url As String, data As String
    url = "http://127.0.0.1:8080/v1/chat/completions"
    data = "{""model"":""local-model"",""messages"":[{""role"":""user"",""content"":""" & JsonEscape(prompt) & """}]}"
    
    http.Open "POST", url, True
    http.setRequestHeader "Content-Type", "application/json"
    http.Send data
    
    targetCell.Value = "Computing..."
End Sub

Private Sub http_onreadystatechange()
    If http.readyState = 4 Then
        Dim tgt As Range
        Set tgt = Range(targetAddress)
        
        If http.Status = 200 Then
            tgt.Value = ExtractContent(http.responseText)
        Else
            tgt.Value = "HTTP " & http.Status & " " & http.statusText
        End If
    End If
End Sub

Private Function ExtractContent(json As String) As String
    Dim p As Long, q As Long, esc As Boolean, ch As String
    p = InStr(1, json, """content"":""", vbTextCompare)
    If p = 0 Then Exit Function
    p = p + Len("""content"":""")
    q = p
    esc = False
    Do While q <= Len(json)
        ch = Mid$(json, q, 1)
        If ch = "\" And Not esc Then
            esc = True
        ElseIf ch = """" And Not esc Then
            Exit Do
        Else
            esc = False
        End If
        q = q + 1
    Loop
    Dim raw As String
    raw = Mid$(json, p, q - p)
    raw = Replace(raw, "\n", vbLf)
    raw = Replace(raw, "\""","""")
    ExtractContent = raw
End Function

Private Function JsonEscape(text As String) As String
    Dim s As String
    s = text
    s = Replace(s, "\", "\\")
    s = Replace(s, """", "\""")
    s = Replace(s, vbCrLf, "\n")
    s = Replace(s, vbCr, "\n")
    s = Replace(s, vbLf, "\n")
    JsonEscape = s
End Function

----------------------------------------------------------
module

Option Explicit

Dim requests As Collection

Sub RunLLAMA_Async_OnSelection()
    Dim sel As Range, c As Range, tgt As Range
    Dim useTwoCols As Boolean
    
    If TypeName(Selection) <> "Range" Then Exit Sub
    Set sel = Selection
    
    If sel.Columns.Count = 1 Then
        useTwoCols = False
    ElseIf sel.Columns.Count = 2 Then
        useTwoCols = True
    Else
        MsgBox "Select 1 column (results go right) or 2 columns (left=prompt, right=result)."
        Exit Sub
    End If
    
    Set requests = New Collection
    
    For Each c In sel.Columns(1).Cells
        If Trim$(CStr(c.Value)) <> "" Then
            If useTwoCols Then
                Set tgt = c.Offset(0, sel.Columns.Count - 1)
            Else
                Set tgt = c.Offset(0, 1)
            End If
            Dim r As New CAsyncRequest
            r.Start c.Value, tgt
            requests.Add r  ' keep object alive
        End If
    Next c
End Sub


